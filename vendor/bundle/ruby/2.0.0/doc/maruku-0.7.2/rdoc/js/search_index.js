var search_data = {"index":{"searchIndex":["maruku","attributelist","errors","exception","htmlelement","htmlfragment","helpers","in","in","markdown","markdown","blocklevelparser","blockcontext","linesource","spanextension","spanlevelparser","charsourcedebug","charsourcemanual","charsourcestrscan","htmlhelper","spancontext","mddocument","mdelement","mdhtmlelement","mdline","nokogirihtmlfragment","out","entitytable","html","htmlelement","latex","mddocumentextensions","markdown","rexmlhtmlfragment","section","strings","maruku","maruku","fencedcode","object","string","textile2signature","<<()","==()","[]()","[]=()","_to_html()","_to_latex()","add_class()","add_class()","add_class()","add_class_to()","add_css_to()","add_indent()","add_ws()","adjust_png()","any_matching_block_extension?()","any_matching_block_extension?()","array_to_html()","array_to_latex()","array_to_md()","check_block_extensions()","check_block_extensions()","check_span_extensions()","check_span_extensions()","children_inspect()","children_to_html()","children_to_latex()","children_to_md()","children_to_s()","close_script_style()","consume_whitespace()","consume_whitespace()","convert_to_mathml_blahtex()","convert_to_mathml_itex2mml()","convert_to_mathml_none()","convert_to_mathml_ritex()","convert_to_png_blahtex()","convert_to_png_none()","count_columns()","create_frame()","create_toc()","cur_char()","cur_char()","cur_chars()","cur_chars()","cur_chars_are()","cur_chars_are()","cur_index()","cur_line()","current_remaining_buffer()","current_remaining_buffer()","day_suffix()","debug_state()","describe()","describe()","describe()","describe()","describe()","describe_error()","describe_pos()","each_element()","eat_this()","element_is_non_inline_html?()","entity()","error()","escapehtml()","escape_to_latex()","eventually_comes_a_def_list()","execute_code_blocks()","expand_attribute_list()","extension_meta()","find_colspan()","first_node_name()","first_node_name()","fix_latex()","generate_id()","get_setting()","gsub!()","handle_tag()","html_element()","ial?()","ignore_char()","ignore_char()","ignore_chars()","ignore_chars()","ignore_line()","inspect()","inspect()","inspect()","interpret_extension()","is_end?()","is_finished?()","is_math_enabled?()","latex_color()","latex_escape()","latex_require_package()","line_md_type()","markdown_extra?()","markdown_extra?()","maruku_error()","maruku_html_signature()","maruku_recover()","md_abbr()","md_abbr_def()","md_al()","md_ald()","md_br()","md_code()","md_codeblock()","md_div()","md_el()","md_em()","md_email()","md_emstrong()","md_entity()","md_equation()","md_foot_ref()","md_footnote()","md_header()","md_hrule()","md_html()","md_ial()","md_im_image()","md_im_link()","md_image()","md_inline_math()","md_li()","md_link()","md_par()","md_quote()","md_ref_def()","md_strong()","md_type()","md_url()","md_xml_instr()","merge_ial()","method_missing()","my_debug()","mysplit()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_meta_data?()","new_meta_data?()","next_char()","next_char()","next_line()","next_matches()","next_matches()","nice_date()","normalize_key_and_value()","number_of_leading_spaces()","numerate()","obfuscate()","old_md()","original_line_number()","parse_blocks()","parse_doc()","parse_email_headers()","parse_span()","parse_text_as_markdown()","pick_apart_non_inline_html()","pixels_per_ex()","process_markdown_inside_elements()","process_markdown_inside_elements()","push()","push_char()","push_element()","push_elements()","push_space()","push_string_if_present()","quote_if_needed()","raise_error()","read_abbreviation()","read_ald()","read_attribute_list()","read_code()","read_definition()","read_em()","read_email_el()","read_emstrong()","read_footnote_ref()","read_footnote_text()","read_header12()","read_header3()","read_image()","read_indented_content()","read_inline_code()","read_inline_html()","read_link()","read_list_item()","read_paragraph()","read_quote()","read_quoted()","read_quoted_or_unquoted()","read_raw_html()","read_ref_definition()","read_ref_id()","read_regexp()","read_regexp()","read_simple()","read_span()","read_strong()","read_table()","read_text_material()","read_url()","read_url_el()","read_xml_instr_span()","read_xml_instruction()","register_block_extension()","register_block_extension()","register_span_extension()","register_span_extension()","render_footnotes()","render_latex_signature()","render_mathml()","render_png()","render_section_number()","replace_each_string()","run_blahtex()","s5_theme()","safe_execute_code()","sanitize_ref_id()","script_style?()","script_style_cdata_end()","script_style_cdata_start()","search_abbreviations()","section_number()","shift_char()","shift_char()","shift_line()","spaces_before_first_char()","span_descendents()","span_descendents()","split_cells()","split_lines()","start_script_style()","string_to_latex()","strip_indent()","stuff_you_read()","substitute_markdown_inside_raw_html()","t2_block_paragraph()","t2_contains_signature?()","t2_empty?()","t2_get_signature()","t2_parse()","t2_parse_blocks()","t2_parse_span()","tell_me_the_future()","tell_user()","textile2()","textile2()","to_html()","to_html()","to_html()","to_html()","to_html()","to_html_abbr()","to_html_cell()","to_html_code()","to_html_code_using_pre()","to_html_definition()","to_html_definition_data()","to_html_definition_list()","to_html_definition_term()","to_html_div()","to_html_divref()","to_html_document()","to_html_document_tree()","to_html_email_address()","to_html_emphasis()","to_html_entity()","to_html_eqref()","to_html_equation()","to_html_footnote_reference()","to_html_head_cell()","to_html_header()","to_html_hrule()","to_html_im_image()","to_html_im_link()","to_html_image()","to_html_immediate_link()","to_html_inline_code()","to_html_inline_math()","to_html_li()","to_html_linebreak()","to_html_link()","to_html_ol()","to_html_paragraph()","to_html_quote()","to_html_raw_html()","to_html_ref_definition()","to_html_strong()","to_html_table()","to_html_ul()","to_html_xml_instr()","to_latex()","to_latex()","to_latex_abbr()","to_latex_cell()","to_latex_code()","to_latex_definition()","to_latex_definition_list()","to_latex_div()","to_latex_divref()","to_latex_document()","to_latex_email_address()","to_latex_emphasis()","to_latex_entity()","to_latex_eqref()","to_latex_equation()","to_latex_footnote_reference()","to_latex_head_cell()","to_latex_header()","to_latex_hrule()","to_latex_im_link()","to_latex_image()","to_latex_immediate_link()","to_latex_inline_code()","to_latex_inline_math()","to_latex_li()","to_latex_linebreak()","to_latex_link()","to_latex_ol()","to_latex_paragraph()","to_latex_quote()","to_latex_raw_html()","to_latex_ref_definition()","to_latex_strong()","to_latex_table()","to_latex_ul()","to_md()","to_md()","to_md()","to_md_abbr_def()","to_md_code()","to_md_email_address()","to_md_emphasis()","to_md_entity()","to_md_header()","to_md_hrule()","to_md_im_image()","to_md_im_link()","to_md_image()","to_md_immediate_link()","to_md_inline_code()","to_md_linebreak()","to_md_link()","to_md_ol()","to_md_paragraph()","to_md_quote()","to_md_ref_definition()","to_md_strong()","to_md_ul()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s5()","to_str()","unquote()","wrap()","wrap_as_element()","wrap_as_environment()","wrap_as_span()","xelem()","xml_newline()","xtext()"],"longSearchIndex":["maruku","maruku::attributelist","maruku::errors","maruku::exception","maruku::htmlelement","maruku::htmlfragment","maruku::helpers","maruku::in","maruku::in","maruku::in::markdown","maruku::in::markdown","maruku::in::markdown::blocklevelparser","maruku::in::markdown::blocklevelparser::blockcontext","maruku::in::markdown::blocklevelparser::linesource","maruku::in::markdown::spanextension","maruku::in::markdown::spanlevelparser","maruku::in::markdown::spanlevelparser::charsourcedebug","maruku::in::markdown::spanlevelparser::charsourcemanual","maruku::in::markdown::spanlevelparser::charsourcestrscan","maruku::in::markdown::spanlevelparser::htmlhelper","maruku::in::markdown::spanlevelparser::spancontext","maruku::mddocument","maruku::mdelement","maruku::mdhtmlelement","maruku::mdline","maruku::nokogirihtmlfragment","maruku::out","maruku::out::entitytable","maruku::out::html","maruku::out::html::htmlelement","maruku::out::latex","maruku::out::latex::mddocumentextensions","maruku::out::markdown","maruku::rexmlhtmlfragment","maruku::section","maruku::strings","maruku","maruku","maruku::in::markdown::fencedcode","object","string","textile2signature","maruku::out::html::htmlelement#<<()","maruku::mdelement#==()","maruku::out::html::htmlelement#[]()","maruku::out::html::htmlelement#[]=()","maruku::section#_to_html()","maruku::section#_to_latex()","maruku::nokogirihtmlfragment#add_class()","maruku::out::html::htmlelement#add_class()","maruku::rexmlhtmlfragment#add_class()","maruku::out::html#add_class_to()","maruku::out::html#add_css_to()","maruku::out::markdown#add_indent()","maruku::out::html#add_ws()","maruku::out::html#adjust_png()","maruku::in::markdown#any_matching_block_extension?()","maruku::in::markdown#any_matching_block_extension?()","maruku::out::html#array_to_html()","maruku::out::latex#array_to_latex()","maruku::out::markdown#array_to_md()","maruku::in::markdown#check_block_extensions()","maruku::in::markdown#check_block_extensions()","maruku::in::markdown#check_span_extensions()","maruku::in::markdown#check_span_extensions()","maruku::mdelement#children_inspect()","maruku::out::html#children_to_html()","maruku::out::latex#children_to_latex()","maruku::out::markdown#children_to_md()","maruku::mdelement#children_to_s()","maruku::in::markdown::spanlevelparser::htmlhelper#close_script_style()","maruku::in::markdown::spanlevelparser::charsourcemanual#consume_whitespace()","maruku::in::markdown::spanlevelparser::charsourcestrscan#consume_whitespace()","maruku::out::html#convert_to_mathml_blahtex()","maruku::out::html#convert_to_mathml_itex2mml()","maruku::out::html#convert_to_mathml_none()","maruku::out::html#convert_to_mathml_ritex()","maruku::out::html#convert_to_png_blahtex()","maruku::out::html#convert_to_png_none()","maruku::in::markdown::blocklevelparser#count_columns()","maruku::errors#create_frame()","maruku::mddocument#create_toc()","maruku::in::markdown::spanlevelparser::charsourcemanual#cur_char()","maruku::in::markdown::spanlevelparser::charsourcestrscan#cur_char()","maruku::in::markdown::spanlevelparser::charsourcemanual#cur_chars()","maruku::in::markdown::spanlevelparser::charsourcestrscan#cur_chars()","maruku::in::markdown::spanlevelparser::charsourcemanual#cur_chars_are()","maruku::in::markdown::spanlevelparser::charsourcestrscan#cur_chars_are()","maruku::in::markdown::blocklevelparser::linesource#cur_index()","maruku::in::markdown::blocklevelparser::linesource#cur_line()","maruku::in::markdown::spanlevelparser::charsourcemanual#current_remaining_buffer()","maruku::in::markdown::spanlevelparser::charsourcestrscan#current_remaining_buffer()","maruku::out::html#day_suffix()","maruku::in::markdown::spanlevelparser::htmlhelper#debug_state()","maruku::in::markdown::blocklevelparser::blockcontext#describe()","maruku::in::markdown::blocklevelparser::linesource#describe()","maruku::in::markdown::spanlevelparser::charsourcemanual#describe()","maruku::in::markdown::spanlevelparser::charsourcestrscan#describe()","maruku::in::markdown::spanlevelparser::spancontext#describe()","maruku::errors#describe_error()","maruku::in::markdown::spanlevelparser::charsourcemanual#describe_pos()","maruku::mdelement#each_element()","maruku::in::markdown::spanlevelparser::htmlhelper#eat_this()","maruku::in::markdown::blocklevelparser#element_is_non_inline_html?()","maruku::out::entitytable#entity()","maruku::in::markdown::spanlevelparser::htmlhelper#error()","maruku::out::html::escapehtml()","maruku::out::latex#escape_to_latex()","maruku::in::markdown::blocklevelparser#eventually_comes_a_def_list()","maruku::in::markdown::blocklevelparser#execute_code_blocks()","maruku::in::markdown::blocklevelparser#expand_attribute_list()","maruku::in::markdown::spanlevelparser#extension_meta()","maruku::in::markdown::blocklevelparser#find_colspan()","maruku::nokogirihtmlfragment#first_node_name()","maruku::rexmlhtmlfragment#first_node_name()","maruku::out::latex#fix_latex()","maruku::mdelement#generate_id()","maruku::mdelement#get_setting()","maruku::mdline#gsub!()","maruku::in::markdown::spanlevelparser::htmlhelper#handle_tag()","maruku::out::html#html_element()","maruku::in::markdown::spanlevelparser#ial?()","maruku::in::markdown::spanlevelparser::charsourcemanual#ignore_char()","maruku::in::markdown::spanlevelparser::charsourcestrscan#ignore_char()","maruku::in::markdown::spanlevelparser::charsourcemanual#ignore_chars()","maruku::in::markdown::spanlevelparser::charsourcestrscan#ignore_chars()","maruku::in::markdown::blocklevelparser::linesource#ignore_line()","maruku::in::markdown::spanlevelparser::htmlhelper#inspect()","maruku::mdelement#inspect()","maruku::section#inspect()","maruku::in::markdown::spanlevelparser#interpret_extension()","maruku::in::markdown::spanlevelparser::spancontext#is_end?()","maruku::in::markdown::spanlevelparser::htmlhelper#is_finished?()","maruku::mddocument#is_math_enabled?()","maruku::out::latex#latex_color()","maruku::out::latex#latex_escape()","maruku::out::latex::mddocumentextensions#latex_require_package()","maruku::mdline#line_md_type()","maruku#markdown_extra?()","maruku#markdown_extra?()","maruku::errors#maruku_error()","maruku::out::html#maruku_html_signature()","maruku::errors#maruku_recover()","maruku::helpers#md_abbr()","maruku::helpers#md_abbr_def()","maruku::in::markdown::spanlevelparser#md_al()","maruku::helpers#md_ald()","maruku::helpers#md_br()","maruku::helpers#md_code()","maruku::helpers#md_codeblock()","maruku::mdelement#md_div()","maruku::helpers#md_el()","maruku::helpers#md_em()","maruku::helpers#md_email()","maruku::helpers#md_emstrong()","maruku::helpers#md_entity()","maruku::mdelement#md_equation()","maruku::helpers#md_foot_ref()","maruku::helpers#md_footnote()","maruku::helpers#md_header()","maruku::helpers#md_hrule()","maruku::helpers#md_html()","maruku::helpers#md_ial()","maruku::helpers#md_im_image()","maruku::helpers#md_im_link()","maruku::helpers#md_image()","maruku::mdelement#md_inline_math()","maruku::helpers#md_li()","maruku::helpers#md_link()","maruku::helpers#md_par()","maruku::helpers#md_quote()","maruku::helpers#md_ref_def()","maruku::helpers#md_strong()","maruku::mdline#md_type()","maruku::helpers#md_url()","maruku::helpers#md_xml_instr()","maruku::in::markdown::spanlevelparser#merge_ial()","maruku::in::markdown::spanlevelparser::charsourcedebug#method_missing()","maruku::in::markdown::spanlevelparser::htmlhelper#my_debug()","maruku::out::markdown#mysplit()","maruku::htmlfragment::new()","maruku::in::markdown::blocklevelparser::linesource::new()","maruku::in::markdown::spanlevelparser::charsourcedebug::new()","maruku::in::markdown::spanlevelparser::charsourcemanual::new()","maruku::in::markdown::spanlevelparser::charsourcestrscan::new()","maruku::in::markdown::spanlevelparser::htmlhelper::new()","maruku::in::markdown::spanlevelparser::spancontext::new()","maruku::mddocument::new()","maruku::mdelement::new()","maruku::nokogirihtmlfragment::new()","maruku::out::entitytable::new()","maruku::out::html::htmlelement::new()","maruku::out::latex::mddocumentextensions::new()","maruku::rexmlhtmlfragment::new()","maruku::section::new()","maruku::new()","maruku::new()","textile2signature::new()","maruku#new_meta_data?()","maruku#new_meta_data?()","maruku::in::markdown::spanlevelparser::charsourcemanual#next_char()","maruku::in::markdown::spanlevelparser::charsourcestrscan#next_char()","maruku::in::markdown::blocklevelparser::linesource#next_line()","maruku::in::markdown::spanlevelparser::charsourcemanual#next_matches()","maruku::in::markdown::spanlevelparser::charsourcestrscan#next_matches()","maruku::out::html#nice_date()","maruku::strings#normalize_key_and_value()","maruku::mdline#number_of_leading_spaces()","maruku::section#numerate()","maruku::out::html#obfuscate()","maruku::mddocument#old_md()","maruku::in::markdown::blocklevelparser::linesource#original_line_number()","maruku::in::markdown::blocklevelparser#parse_blocks()","maruku::in::markdown::blocklevelparser#parse_doc()","maruku::strings#parse_email_headers()","maruku::in::markdown::spanlevelparser#parse_span()","maruku::in::markdown::blocklevelparser#parse_text_as_markdown()","maruku::in::markdown::blocklevelparser#pick_apart_non_inline_html()","maruku::out::html#pixels_per_ex()","maruku::nokogirihtmlfragment#process_markdown_inside_elements()","maruku::rexmlhtmlfragment#process_markdown_inside_elements()","maruku::in::markdown::spanlevelparser::spancontext#push()","maruku::in::markdown::spanlevelparser::spancontext#push_char()","maruku::in::markdown::spanlevelparser::spancontext#push_element()","maruku::in::markdown::spanlevelparser::spancontext#push_elements()","maruku::in::markdown::spanlevelparser::spancontext#push_space()","maruku::in::markdown::spanlevelparser::spancontext#push_string_if_present()","maruku::attributelist#quote_if_needed()","maruku::errors#raise_error()","maruku::in::markdown::blocklevelparser#read_abbreviation()","maruku::in::markdown::blocklevelparser#read_ald()","maruku::in::markdown::spanlevelparser#read_attribute_list()","maruku::in::markdown::blocklevelparser#read_code()","maruku::in::markdown::blocklevelparser#read_definition()","maruku::in::markdown::spanlevelparser#read_em()","maruku::in::markdown::spanlevelparser#read_email_el()","maruku::in::markdown::spanlevelparser#read_emstrong()","maruku::in::markdown::spanlevelparser#read_footnote_ref()","maruku::in::markdown::blocklevelparser#read_footnote_text()","maruku::in::markdown::blocklevelparser#read_header12()","maruku::in::markdown::blocklevelparser#read_header3()","maruku::in::markdown::spanlevelparser#read_image()","maruku::in::markdown::blocklevelparser#read_indented_content()","maruku::in::markdown::spanlevelparser#read_inline_code()","maruku::in::markdown::spanlevelparser#read_inline_html()","maruku::in::markdown::spanlevelparser#read_link()","maruku::in::markdown::blocklevelparser#read_list_item()","maruku::in::markdown::blocklevelparser#read_paragraph()","maruku::in::markdown::blocklevelparser#read_quote()","maruku::in::markdown::spanlevelparser#read_quoted()","maruku::in::markdown::spanlevelparser#read_quoted_or_unquoted()","maruku::in::markdown::blocklevelparser#read_raw_html()","maruku::in::markdown::blocklevelparser#read_ref_definition()","maruku::in::markdown::spanlevelparser#read_ref_id()","maruku::in::markdown::spanlevelparser::charsourcemanual#read_regexp()","maruku::in::markdown::spanlevelparser::charsourcestrscan#read_regexp()","maruku::in::markdown::spanlevelparser#read_simple()","maruku::in::markdown::spanlevelparser#read_span()","maruku::in::markdown::spanlevelparser#read_strong()","maruku::in::markdown::blocklevelparser#read_table()","maruku::in::markdown::blocklevelparser#read_text_material()","maruku::in::markdown::spanlevelparser#read_url()","maruku::in::markdown::spanlevelparser#read_url_el()","maruku::in::markdown::spanlevelparser#read_xml_instr_span()","maruku::in::markdown::blocklevelparser#read_xml_instruction()","maruku::in::markdown::register_block_extension()","maruku::in::markdown::register_block_extension()","maruku::in::markdown::register_span_extension()","maruku::in::markdown::register_span_extension()","maruku::out::html#render_footnotes()","maruku::out::latex#render_latex_signature()","maruku::out::html#render_mathml()","maruku::out::html#render_png()","maruku::out::html#render_section_number()","maruku::mdelement#replace_each_string()","maruku::out::html#run_blahtex()","maruku::mddocument#s5_theme()","maruku::in::markdown::blocklevelparser#safe_execute_code()","maruku::strings#sanitize_ref_id()","maruku::in::markdown::spanlevelparser::htmlhelper#script_style?()","maruku::in::markdown::spanlevelparser::htmlhelper#script_style_cdata_end()","maruku::in::markdown::spanlevelparser::htmlhelper#script_style_cdata_start()","maruku::in::markdown::blocklevelparser#search_abbreviations()","maruku::out::html#section_number()","maruku::in::markdown::spanlevelparser::charsourcemanual#shift_char()","maruku::in::markdown::spanlevelparser::charsourcestrscan#shift_char()","maruku::in::markdown::blocklevelparser::linesource#shift_line()","maruku::strings#spaces_before_first_char()","maruku::nokogirihtmlfragment#span_descendents()","maruku::rexmlhtmlfragment#span_descendents()","maruku::in::markdown::blocklevelparser#split_cells()","maruku::strings#split_lines()","maruku::in::markdown::spanlevelparser::htmlhelper#start_script_style()","maruku::out::latex#string_to_latex()","maruku::strings#strip_indent()","maruku::in::markdown::spanlevelparser::htmlhelper#stuff_you_read()","maruku::in::markdown::blocklevelparser#substitute_markdown_inside_raw_html()","maruku::mddocument#t2_block_paragraph()","string#t2_contains_signature?()","string#t2_empty?()","string#t2_get_signature()","maruku::mddocument#t2_parse()","maruku::mddocument#t2_parse_blocks()","maruku::mddocument#t2_parse_span()","maruku::in::markdown::blocklevelparser::linesource#tell_me_the_future()","maruku::errors#tell_user()","maruku::textile2()","maruku::textile2()","maruku::nokogirihtmlfragment#to_html()","maruku::out::html#to_html()","maruku::out::html::htmlelement#to_html()","maruku::rexmlhtmlfragment#to_html()","maruku::section#to_html()","maruku::out::html#to_html_abbr()","maruku::out::html#to_html_cell()","maruku::out::html#to_html_code()","maruku::out::html#to_html_code_using_pre()","maruku::out::html#to_html_definition()","maruku::out::html#to_html_definition_data()","maruku::out::html#to_html_definition_list()","maruku::out::html#to_html_definition_term()","maruku::out::html#to_html_div()","maruku::out::html#to_html_divref()","maruku::out::html#to_html_document()","maruku::out::html#to_html_document_tree()","maruku::out::html#to_html_email_address()","maruku::out::html#to_html_emphasis()","maruku::out::html#to_html_entity()","maruku::out::html#to_html_eqref()","maruku::out::html#to_html_equation()","maruku::out::html#to_html_footnote_reference()","maruku::out::html#to_html_head_cell()","maruku::out::html#to_html_header()","maruku::out::html#to_html_hrule()","maruku::out::html#to_html_im_image()","maruku::out::html#to_html_im_link()","maruku::out::html#to_html_image()","maruku::out::html#to_html_immediate_link()","maruku::out::html#to_html_inline_code()","maruku::out::html#to_html_inline_math()","maruku::out::html#to_html_li()","maruku::out::html#to_html_linebreak()","maruku::out::html#to_html_link()","maruku::out::html#to_html_ol()","maruku::out::html#to_html_paragraph()","maruku::out::html#to_html_quote()","maruku::out::html#to_html_raw_html()","maruku::out::html#to_html_ref_definition()","maruku::out::html#to_html_strong()","maruku::out::html#to_html_table()","maruku::out::html#to_html_ul()","maruku::out::html#to_html_xml_instr()","maruku::out::latex#to_latex()","maruku::section#to_latex()","maruku::out::latex#to_latex_abbr()","maruku::out::latex#to_latex_cell()","maruku::out::latex#to_latex_code()","maruku::out::latex#to_latex_definition()","maruku::out::latex#to_latex_definition_list()","maruku::out::latex#to_latex_div()","maruku::out::latex#to_latex_divref()","maruku::out::latex#to_latex_document()","maruku::out::latex#to_latex_email_address()","maruku::out::latex#to_latex_emphasis()","maruku::out::latex#to_latex_entity()","maruku::out::latex#to_latex_eqref()","maruku::out::latex#to_latex_equation()","maruku::out::latex#to_latex_footnote_reference()","maruku::out::latex#to_latex_head_cell()","maruku::out::latex#to_latex_header()","maruku::out::latex#to_latex_hrule()","maruku::out::latex#to_latex_im_link()","maruku::out::latex#to_latex_image()","maruku::out::latex#to_latex_immediate_link()","maruku::out::latex#to_latex_inline_code()","maruku::out::latex#to_latex_inline_math()","maruku::out::latex#to_latex_li()","maruku::out::latex#to_latex_linebreak()","maruku::out::latex#to_latex_link()","maruku::out::latex#to_latex_ol()","maruku::out::latex#to_latex_paragraph()","maruku::out::latex#to_latex_quote()","maruku::out::latex#to_latex_raw_html()","maruku::out::html#to_latex_ref_definition()","maruku::out::latex#to_latex_strong()","maruku::out::latex#to_latex_table()","maruku::out::latex#to_latex_ul()","maruku::attributelist#to_md()","maruku::mddocument#to_md()","maruku::out::markdown#to_md()","maruku::out::markdown#to_md_abbr_def()","maruku::out::markdown#to_md_code()","maruku::out::markdown#to_md_email_address()","maruku::out::markdown#to_md_emphasis()","maruku::out::markdown#to_md_entity()","maruku::out::markdown#to_md_header()","maruku::out::markdown#to_md_hrule()","maruku::out::markdown#to_md_im_image()","maruku::out::markdown#to_md_im_link()","maruku::out::markdown#to_md_image()","maruku::out::markdown#to_md_immediate_link()","maruku::out::markdown#to_md_inline_code()","maruku::out::markdown#to_md_linebreak()","maruku::out::markdown#to_md_link()","maruku::out::markdown#to_md_ol()","maruku::out::markdown#to_md_paragraph()","maruku::out::markdown#to_md_quote()","maruku::out::markdown#to_md_ref_definition()","maruku::out::markdown#to_md_strong()","maruku::out::markdown#to_md_ul()","maruku::attributelist#to_s()","maruku::mdelement#to_s()","maruku::out::html::htmlelement#to_s()","maruku#to_s()","maruku#to_s()","maruku::mddocument#to_s5()","maruku::out::html::htmlelement#to_str()","maruku::strings#unquote()","maruku::out::markdown#wrap()","maruku::out::html#wrap_as_element()","maruku::out::latex#wrap_as_environment()","maruku::out::latex#wrap_as_span()","maruku::out::html#xelem()","maruku::out::html#xml_newline()","maruku::out::html#xtext()"],"info":[["MaRuKu","","MaRuKu.html","","<p>begin maruku_doc\n\n<pre>Extension: math\nAttribute: html_png_engine\nScope: document, element\nOutput: html\nSummary: ...</pre>\n"],["MaRuKu::AttributeList","","MaRuKu/AttributeList.html","","<p>This represents a list of attributes specified in the Markdown document\nthat apply to a Markdown-generated …\n"],["MaRuKu::Errors","","MaRuKu/Errors.html","",""],["MaRuKu::Exception","","MaRuKu/Exception.html","",""],["MaRuKu::HTMLElement","","MaRuKu/HTMLElement.html","","<p>This gets mixed into HTML MDElement nodes to hold the parsed document\nfragment\n"],["MaRuKu::HTMLFragment","","MaRuKu/HTMLFragment.html","","<p>This is just a factory, not an actual class\n"],["MaRuKu::Helpers","","MaRuKu/Helpers.html","","<p>A collection of helper functions for creating Markdown elements. They hide\nthe particular internal representations. …\n"],["MaRuKu::In","","MaRuKu/In.html","",""],["MaRuKu::In","","MaRuKu/In.html","",""],["MaRuKu::In::Markdown","","MaRuKu/In/Markdown.html","","<p>begin maruku_doc\n\n<pre>Attribute: :fenced_code_blocks\nScope: global, document\nSummary: Enables fenced code blocks</pre>\n"],["MaRuKu::In::Markdown","","MaRuKu/In/Markdown.html","",""],["MaRuKu::In::Markdown::BlockLevelParser","","MaRuKu/In/Markdown/BlockLevelParser.html","",""],["MaRuKu::In::Markdown::BlockLevelParser::BlockContext","","MaRuKu/In/Markdown/BlockLevelParser/BlockContext.html","",""],["MaRuKu::In::Markdown::BlockLevelParser::LineSource","","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html","","<p>This represents a source of lines that can be consumed.\n<p>It is the twin of CharSource.\n"],["MaRuKu::In::Markdown::SpanExtension","","MaRuKu/In/Markdown/SpanExtension.html","",""],["MaRuKu::In::Markdown::SpanLevelParser","","MaRuKu/In/Markdown/SpanLevelParser.html","",""],["MaRuKu::In::Markdown::SpanLevelParser::CharSourceDebug","","MaRuKu/In/Markdown/SpanLevelParser/CharSourceDebug.html","",""],["MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html","","<p>CharSource = CharSourceStrscan   # Faster on LONG documents. But\nStringScanner is buggy in Rubinius  …\n"],["MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html","",""],["MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html","","<p>This class helps me read and sanitize HTML blocks\n"],["MaRuKu::In::Markdown::SpanLevelParser::SpanContext","","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html","",""],["MaRuKu::MDDocument","","MaRuKu/MDDocument.html","","<p>This represents the whole document and holds global data.\n"],["MaRuKu::MDElement","","MaRuKu/MDElement.html","","<p>Rather than having a separate class for every possible element, Maruku has\na single {MDElement} class …\n"],["MaRuKu::MDHTMLElement","","MaRuKu/MDHTMLElement.html","","<p>A specialization of Element that can keep track of its parsed HTML as an\nattribute (rather than metadata) …\n"],["MaRuKu::MDLine","","MaRuKu/MDLine.html","","<p>Represents a single line in a Markdown source file, as produced by\nLineSource.\n"],["MaRuKu::NokogiriHTMLFragment","","MaRuKu/NokogiriHTMLFragment.html","","<p>Nokogiri backend for HTML handling\n"],["MaRuKu::Out","","MaRuKu/Out.html","",""],["MaRuKu::Out::EntityTable","","MaRuKu/Out/EntityTable.html","",""],["MaRuKu::Out::HTML","","MaRuKu/Out/HTML.html","","<p>This module groups all functions related to HTML export.\n"],["MaRuKu::Out::HTML::HTMLElement","","MaRuKu/Out/HTML/HTMLElement.html","","<p>A simple class to represent an HTML element for output.\n"],["MaRuKu::Out::Latex","","MaRuKu/Out/Latex.html","",""],["MaRuKu::Out::Latex::MDDocumentExtensions","","MaRuKu/Out/Latex/MDDocumentExtensions.html","",""],["MaRuKu::Out::Markdown","","MaRuKu/Out/Markdown.html","",""],["MaRuKu::REXMLHTMLFragment","","MaRuKu/REXMLHTMLFragment.html","","<p>An HTMLFragment implementation using REXML\n"],["MaRuKu::Section","","MaRuKu/Section.html","","<p>A section in the table of contents of a document.\n"],["MaRuKu::Strings","","MaRuKu/Strings.html","","<p>Utility functions for dealing with strings.\n"],["Maruku","","Maruku.html","","<p>The public interface for Maruku.\n<p>@example Render a document fragment Maruku.new(“## Header ##”).to_html …\n"],["Maruku","","Maruku.html","","<p>The public interface for Maruku.\n<p>@example Render a document fragment Maruku.new(“## Header ##”).to_html …\n"],["Maruku::In::Markdown::FencedCode","","Maruku/In/Markdown/FencedCode.html","",""],["Object","","Object.html","",""],["String","","String.html","",""],["Textile2Signature","","Textile2Signature.html","",""],["<<","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-3C-3C","(child)",""],["==","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-3D-3D","(o)",""],["[]","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-5B-5D","(key)",""],["[]=","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-5B-5D-3D","(key, value)",""],["_to_html","MaRuKu::Section","MaRuKu/Section.html#method-i-_to_html","()",""],["_to_latex","MaRuKu::Section","MaRuKu/Section.html#method-i-_to_latex","()",""],["add_class","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-i-add_class","(class_name)","<p>Add a class to the children of this fragment\n"],["add_class","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-add_class","(class_name)",""],["add_class","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-i-add_class","(class_name)","<p>Add a class to the children of this fragment\n"],["add_class_to","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-add_class_to","(el, cl)",""],["add_css_to","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-add_css_to","(head)",""],["add_indent","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-add_indent","(s,char=\" \")",""],["add_ws","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-add_ws","(e)",""],["adjust_png","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-adjust_png","(png, use_depth)",""],["any_matching_block_extension?","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-any_matching_block_extension-3F","(line)",""],["any_matching_block_extension?","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-any_matching_block_extension-3F",null,""],["array_to_html","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-array_to_html","(array)",""],["array_to_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-array_to_latex","(array, join_char='')",""],["array_to_md","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-array_to_md","(array, context, join_char='')",""],["check_block_extensions","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-check_block_extensions",null,""],["check_block_extensions","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-check_block_extensions","(src, con, line)",""],["check_span_extensions","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-check_span_extensions",null,""],["check_span_extensions","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-i-check_span_extensions","(src, con)",""],["children_inspect","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-children_inspect","()",""],["children_to_html","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-children_to_html","()","<p>Convert each child to html\n"],["children_to_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-children_to_latex","()","<p>Convert each child to html\n"],["children_to_md","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-children_to_md","(context)","<p>Convert each child to html\n"],["children_to_s","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-children_to_s","()",""],["close_script_style","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-close_script_style","()","<p>Finish script or style tag content, wrapping it in CDATA if necessary, and\nadd it to our original @already …\n"],["consume_whitespace","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-consume_whitespace","()",""],["consume_whitespace","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-consume_whitespace","()",""],["convert_to_mathml_blahtex","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_mathml_blahtex","(kind, tex)",""],["convert_to_mathml_itex2mml","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_mathml_itex2mml","(kind, tex)",""],["convert_to_mathml_none","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_mathml_none","(kind, tex)",""],["convert_to_mathml_ritex","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_mathml_ritex","(kind, tex)",""],["convert_to_png_blahtex","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_png_blahtex","(kind, tex)",""],["convert_to_png_none","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-convert_to_png_none","(kind, tex)",""],["count_columns","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-count_columns","(row)","<p>count the actual number of elements in a row taking into account colspans\n"],["create_frame","MaRuKu::Errors","MaRuKu/Errors.html#method-i-create_frame","(s)",""],["create_toc","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-create_toc","()",""],["cur_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-cur_char","()","<p>Return current char as a String (or nil).\n"],["cur_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-cur_char","()","<p>Return current char as a String (or nil).\n"],["cur_chars","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-cur_chars","(n)","<p>Return the next n chars as a String.\n"],["cur_chars","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-cur_chars","(n)","<p>Return the next n chars as a String.\n"],["cur_chars_are","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-cur_chars_are","(string)",""],["cur_chars_are","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-cur_chars_are","(string)","<p>Returns true if string matches what we&#39;re pointing to\n"],["cur_index","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-cur_index","()",""],["cur_line","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-cur_line","()",""],["current_remaining_buffer","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-current_remaining_buffer","()",""],["current_remaining_buffer","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-current_remaining_buffer","()","<p>Return the rest of the string\n"],["day_suffix","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-day_suffix","(day)","<p>returns “st”,“nd”,“rd” or “th” as appropriate\n"],["debug_state","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-debug_state","(note)",""],["describe","MaRuKu::In::Markdown::BlockLevelParser::BlockContext","MaRuKu/In/Markdown/BlockLevelParser/BlockContext.html#method-i-describe","()",""],["describe","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-describe","()",""],["describe","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-describe","()",""],["describe","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-describe","()",""],["describe","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-describe","()",""],["describe_error","MaRuKu::Errors","MaRuKu/Errors.html#method-i-describe_error","(s, src=nil, con=nil, recover=nil)",""],["describe_pos","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-describe_pos","(buffer, buffer_index)",""],["each_element","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-each_element","(e_node_type=nil, &block)","<p>Iterates through each {MDElement} child node of this element. This includes\ndeeply-nested child nodes. …\n"],["eat_this","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-eat_this","(line)",""],["element_is_non_inline_html?","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-element_is_non_inline_html-3F","(elem)","<p>Is the given element an HTML element whose root is not an inline element?\n"],["entity","MaRuKu::Out::EntityTable","MaRuKu/Out/EntityTable.html#method-i-entity","(name)",""],["error","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-error","(s)",""],["escapeHTML","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-c-escapeHTML","(text)","<p>Escape text for use in HTML (content or attributes) by running it through\nstandard XML escaping (quotes …\n"],["escape_to_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-escape_to_latex","(s)",""],["eventually_comes_a_def_list","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-eventually_comes_a_def_list","(src)","<p>If current line is text, a definition list is coming if 1)\ntext,empty,*,definition\n"],["execute_code_blocks","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-execute_code_blocks","()",""],["expand_attribute_list","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-expand_attribute_list","(al, result)","<p>Expands an attribute list in an Hash\n"],["extension_meta","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-extension_meta","(src, con, break_on_chars=nil)",""],["find_colspan","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-find_colspan","(al)","<p>Search an attribute list looking for a colspan\n"],["first_node_name","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-i-first_node_name","()","<p>@return The name of the first child element in the fragment.\n"],["first_node_name","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-i-first_node_name","()","<p>The name of the first element in the fragment\n"],["fix_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-fix_latex","(str)",""],["generate_id","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-generate_id","()","<p>Generate an id for headers. Assumes @children is set.\n"],["get_setting","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-get_setting","(sym)",""],["gsub!","MaRuKu::MDLine","MaRuKu/MDLine.html#method-i-gsub-21","(*args)",""],["handle_tag","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-handle_tag","()",""],["html_element","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-html_element","(name, content=\"\", attributes={})","<p>Pretty much the same as the HTMLElement constructor except it copies\nstandard attributes out of the  …\n"],["ial?","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-ial-3F","(e)",""],["ignore_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-ignore_char","()",""],["ignore_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-ignore_char","()","<p>Advance the pointer\n"],["ignore_chars","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-ignore_chars","(n)",""],["ignore_chars","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-ignore_chars","(n)","<p>Advance the pointer by n\n"],["ignore_line","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-ignore_line","()",""],["inspect","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-inspect","()",""],["inspect","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-inspect","()","<p>Outputs the document AST as calls to document helpers. (this should be\n`eval`-able to get a copy of the …\n"],["inspect","MaRuKu::Section","MaRuKu/Section.html#method-i-inspect","(indent = 1)",""],["interpret_extension","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-interpret_extension","(src, con, break_on_chars=nil)","<p>Start: cursor on character *<strong>after</strong>* &#39;{&#39; End: curson\non &#39;}&#39; or EOF\n"],["is_end?","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-is_end-3F","()",""],["is_finished?","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-is_finished-3F","()",""],["is_math_enabled?","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-is_math_enabled-3F","()",""],["latex_color","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-latex_color","(s, command='color')","<p>color{name} color[rgb]{1,0.2,0.3}\n"],["latex_escape","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-latex_escape","(source)","<p>the ultimate escaping (is much better than using verb)\n"],["latex_require_package","MaRuKu::Out::Latex::MDDocumentExtensions","MaRuKu/Out/Latex/MDDocumentExtensions.html#method-i-latex_require_package","(p)",""],["line_md_type","MaRuKu::MDLine","MaRuKu/MDLine.html#method-i-line_md_type","()",""],["markdown_extra?","Maruku","Maruku.html#method-i-markdown_extra-3F","()","<p>Whether Markdown implements the PHP Markdown extra syntax.\n<p>Note: it is not guaranteed that if this is …\n"],["markdown_extra?","Maruku","Maruku.html#method-i-markdown_extra-3F","()","<p>Whether Markdown implements the PHP Markdown extra syntax.\n<p>Note: it is not guaranteed that if this is …\n"],["maruku_error","MaRuKu::Errors","MaRuKu/Errors.html#method-i-maruku_error","(s, src=nil, con=nil, recover=nil)","<p>Properly handles a formatting error. All such errors go through this\nmethod.\n<p>The behavior depends on {MaRuKu::Globals …\n"],["maruku_html_signature","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-maruku_html_signature","()",""],["maruku_recover","MaRuKu::Errors","MaRuKu/Errors.html#method-i-maruku_recover","(s, src=nil, con=nil, recover=nil)","<p>This is like {#maruku_error} but will never raise.\n"],["md_abbr","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_abbr","(abbr, title)",""],["md_abbr_def","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_abbr_def","(abbr, text, al=nil)",""],["md_al","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-md_al","(s = [])",""],["md_ald","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_ald","(id, al)","<p>Attribute list definition\n"],["md_br","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_br","()",""],["md_code","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_code","(code, al=nil)","<p>Inline code\n"],["md_codeblock","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_codeblock","(source, lang=nil, al=nil)","<p>Code block\n"],["md_div","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-md_div","(children, al = nil)",""],["md_el","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_el","(node_type, children=[], meta={}, al=nil)","<p>@param children [MDElement, String, Array&lt;MDElement, String&gt;]\n\n<pre>The child nodes.\nIf the first child ...</pre>\n"],["md_em","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_em","(children, al=nil)",""],["md_email","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_email","(email, al=nil)","<p>An email to be linkified (e.g. `&lt;andrea@rubyforge.org&gt;` or\n`&lt;andrea@rubyforge.org&gt;`).\n"],["md_emstrong","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_emstrong","(children, al=nil)",""],["md_entity","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_entity","(entity_name, al=nil)",""],["md_equation","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-md_equation","(math, label, numerate)",""],["md_foot_ref","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_foot_ref","(ref_id, al=nil)","<p>Markdown extra\n"],["md_footnote","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_footnote","(footnote_id, children, al=nil)",""],["md_header","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_header","(level, children, al=nil)",""],["md_hrule","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_hrule","()",""],["md_html","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_html","(raw_html, al=nil)",""],["md_ial","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_ial","(al)","<p>inline attribute list\n"],["md_im_image","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_im_image","(children, url, title=nil, al=nil)",""],["md_im_link","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_im_link","(children, url, title = nil, al=nil)",""],["md_image","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_image","(children, ref_id, al=nil)",""],["md_inline_math","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-md_inline_math","(math)",""],["md_li","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_li","(children, want_my_par=false, al=nil)",""],["md_link","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_link","(children, ref_id, al=nil)",""],["md_par","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_par","(children, al=nil)",""],["md_quote","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_quote","(children, al=nil)",""],["md_ref_def","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_ref_def","(ref_id, url, title=nil, meta={}, al=nil)","<p>A definition of a reference (e.g. `[1]: url [properties]`).\n"],["md_strong","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_strong","(children, al=nil)",""],["md_type","MaRuKu::MDLine","MaRuKu/MDLine.html#method-i-md_type","()",""],["md_url","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_url","(url, al=nil)","<p>A URL to be linkified (e.g. `&lt;www.example.com/&gt;`).\n"],["md_xml_instr","MaRuKu::Helpers","MaRuKu/Helpers.html#method-i-md_xml_instr","(target, code)","<p>A server directive (e.g. `&lt;?target code… ?&gt;`)\n"],["merge_ial","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-merge_ial","(elements, src, con)",""],["method_missing","MaRuKu::In::Markdown::SpanLevelParser::CharSourceDebug","MaRuKu/In/Markdown/SpanLevelParser/CharSourceDebug.html#method-i-method_missing","(methodname, *args)",""],["my_debug","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-my_debug","(s)",""],["mysplit","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-mysplit","(c)","<p>“ andrea censi ” =&gt; [“ andrea ”, “censi ”]\n"],["new","MaRuKu::HTMLFragment","MaRuKu/HTMLFragment.html#method-c-new","(raw_html)","<p>HTMLFragment.new produces a concrete HTMLFragment implementation that is\neither a NokogiriHTMLFragment …\n"],["new","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-c-new","(lines, parent=nil, parent_offset=nil)",""],["new","MaRuKu::In::Markdown::SpanLevelParser::CharSourceDebug","MaRuKu/In/Markdown/SpanLevelParser/CharSourceDebug.html#method-c-new","(s, parent)",""],["new","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-c-new","(s, parent=nil)",""],["new","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-c-new","(s, parent=nil)",""],["new","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-c-new","()",""],["new","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-c-new","()",""],["new","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-c-new","(s=nil)",""],["new","MaRuKu::MDElement","MaRuKu/MDElement.html#method-c-new","(node_type = :unset, children = [], meta = {}, al = nil)",""],["new","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-c-new","(raw_html)",""],["new","MaRuKu::Out::EntityTable","MaRuKu/Out/EntityTable.html#method-c-new","()",""],["new","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-c-new","(name, attr={}, children=[])",""],["new","MaRuKu::Out::Latex::MDDocumentExtensions","MaRuKu/Out/Latex/MDDocumentExtensions.html#method-c-new","(*args)",""],["new","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-c-new","(raw_html)",""],["new","MaRuKu::Section","MaRuKu/Section.html#method-c-new","()",""],["new","Maruku","Maruku.html#method-c-new","(s = nil, meta = {})",""],["new","Maruku","Maruku.html#method-c-new",null,""],["new","Textile2Signature","Textile2Signature.html#method-c-new","(s)",""],["new_meta_data?","Maruku","Maruku.html#method-i-new_meta_data-3F","()","<p>Whether Markdown implements the new meta-data proposal.\n<p>Note: it is not guaranteed that if this is false, …\n"],["new_meta_data?","Maruku","Maruku.html#method-i-new_meta_data-3F","()","<p>Whether Markdown implements the new meta-data proposal.\n<p>Note: it is not guaranteed that if this is false, …\n"],["next_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-next_char","()","<p>Return the char after current char as a String (or nil).\n"],["next_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-next_char","()","<p>Return the char after current char as a String (or nil).\n"],["next_line","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-next_line","()",""],["next_matches","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-next_matches","(r)",""],["next_matches","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-next_matches","(r)","<p>Returns true if Regexp r matches what we&#39;re pointing to\n"],["nice_date","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-nice_date","()","<p>formats a nice date\n"],["normalize_key_and_value","MaRuKu::Strings","MaRuKu/Strings.html#method-i-normalize_key_and_value","(k, v)","<p>Normalize the key/value pairs for email headers. Keys are downcased and\nconverted to symbols; spaces …\n"],["number_of_leading_spaces","MaRuKu::MDLine","MaRuKu/MDLine.html#method-i-number_of_leading_spaces","()","<p>Returns the number of leading spaces on this string, considering that a tab\ncounts as {MaRuKu::Strings::TAB_SIZE} …\n"],["numerate","MaRuKu::Section","MaRuKu/Section.html#method-i-numerate","(a = [])","<p>Assign {#section_number section numbers} to this section and its children.\nThis also assigns the section …\n"],["obfuscate","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-obfuscate","(s)","<p>Email address\n"],["old_md","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-old_md","(context={})",""],["original_line_number","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-original_line_number","(index)",""],["parse_blocks","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-parse_blocks","(src)","<p>Input is a LineSource\n"],["parse_doc","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-parse_doc","(s)",""],["parse_email_headers","MaRuKu::Strings","MaRuKu/Strings.html#method-i-parse_email_headers","(s)","<p>Parses email headers, returning a hash. `hash` is the message; that is,\nanything past the headers.\n<p>Keys …\n"],["parse_span","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-parse_span","(string, parent=nil)",""],["parse_text_as_markdown","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-parse_text_as_markdown","(text)","<p>Splits the string and calls parse_lines_as_markdown\n"],["pick_apart_non_inline_html","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-pick_apart_non_inline_html","(children)","<p>If there are non-inline HTML tags in the paragraph, break them out into\ntheir own elements and make paragraphs …\n"],["pixels_per_ex","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-pixels_per_ex","()",""],["process_markdown_inside_elements","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-i-process_markdown_inside_elements","(doc)","<p>Process markdown within the contents of some elements and replace their\ncontents with the processed version. …\n"],["process_markdown_inside_elements","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-i-process_markdown_inside_elements","(doc)","<p>Process markdown within the contents of some elements and replace their\ncontents with the processed version. …\n"],["push","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push","(e)",""],["push_char","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push_char","(c)",""],["push_element","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push_element","(e)",""],["push_elements","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push_elements","(a)",""],["push_space","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push_space","()","<p>push space into current string if there isn&#39;t one\n"],["push_string_if_present","MaRuKu::In::Markdown::SpanLevelParser::SpanContext","MaRuKu/In/Markdown/SpanLevelParser/SpanContext.html#method-i-push_string_if_present","()",""],["quote_if_needed","MaRuKu::AttributeList","MaRuKu/AttributeList.html#method-i-quote_if_needed","(str)",""],["raise_error","MaRuKu::Errors","MaRuKu/Errors.html#method-i-raise_error","(s)",""],["read_abbreviation","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_abbreviation","(src)",""],["read_ald","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_ald","(src)",""],["read_attribute_list","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_attribute_list","(src, con=nil, break_on_chars=nil)","<p>@return [AttributeList, nil]\n"],["read_code","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_code","(src)",""],["read_definition","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_definition","(src)",""],["read_em","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_em","(src, delim)",""],["read_email_el","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_email_el","(src,con)",""],["read_emstrong","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_emstrong","(src, delim)",""],["read_footnote_ref","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_footnote_ref","(src,con)",""],["read_footnote_text","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_footnote_text","(src)",""],["read_header12","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_header12","(src)","<p>reads a header (with —– or ========)\n"],["read_header3","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_header3","(src)","<p>reads a header like &#39;#### header ####&#39;\n"],["read_image","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_image","(src, con)",""],["read_indented_content","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_indented_content","(src, indentation, break_list, item_type, ial_offset=0)","<p>This is the only ugly function in the code base. It is used to read list\nitems, descriptions, footnote …\n"],["read_inline_code","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_inline_code","(src, con)",""],["read_inline_html","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_inline_html","(src, con)",""],["read_link","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_link","(src, con)",""],["read_list_item","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_list_item","(src)","<p>Reads one list item, either ordered or unordered.\n"],["read_paragraph","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_paragraph","(src)",""],["read_quote","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_quote","(src)",""],["read_quoted","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_quoted","(src, con)","<p>Tries to read a quoted value. If stream does not start with &#39; or “,\nreturns nil.\n"],["read_quoted_or_unquoted","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_quoted_or_unquoted","(src, con, escaped, exit_on_chars)",""],["read_raw_html","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_raw_html","(src)",""],["read_ref_definition","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_ref_definition","(src, out)",""],["read_ref_id","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_ref_id","(src, con)","<p>Reads a bracketed id “[refid]”. Consumes also both brackets.\n"],["read_regexp","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-read_regexp","(r)",""],["read_regexp","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-read_regexp","(r)",""],["read_simple","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_simple","(src, escaped, exit_on_chars=nil, exit_on_strings=nil, warn=true)","<p>Reads a simple string (no formatting) until one of exit_on_chars, while\nescaping the escaped. If the …\n"],["read_span","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_span","(src, escaped, exit_on_chars=nil, exit_on_strings=nil)","<p>This is the main loop for reading span elements\n<p>It&#39;s long, but not <strong>complex</strong> or difficult to understand.\n…\n"],["read_strong","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_strong","(src, delim)",""],["read_table","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_table","(src)",""],["read_text_material","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_text_material","(src, output)",""],["read_url","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_url","(src, break_on)",""],["read_url_el","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_url_el","(src,con)",""],["read_xml_instr_span","MaRuKu::In::Markdown::SpanLevelParser","MaRuKu/In/Markdown/SpanLevelParser.html#method-i-read_xml_instr_span","(src, con)",""],["read_xml_instruction","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-read_xml_instruction","(src, output)",""],["register_block_extension","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-c-register_block_extension",null,""],["register_block_extension","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-c-register_block_extension","(args)",""],["register_span_extension","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-c-register_span_extension","(args)",""],["register_span_extension","MaRuKu::In::Markdown","MaRuKu/In/Markdown.html#method-c-register_span_extension",null,""],["render_footnotes","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-render_footnotes","()",""],["render_latex_signature","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-render_latex_signature","()",""],["render_mathml","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-render_mathml","(kind, tex)","<p>Creates an xml Mathml document of this node&#39;s TeX code.\n<p>@return [MaRuKu::Out::HTML::HTMLElement]\n"],["render_png","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-render_png","(kind, tex)","<p>Renders a PNG image of this node&#39;s TeX code. Returns\n<p>@return [MaRuKu::Out::HTML::PNG, nil]\n\n<pre>A struct ...</pre>\n"],["render_section_number","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-render_section_number","()","<p>nil if not applicable, else SPAN element\n"],["replace_each_string","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-replace_each_string","(&block)","<p>Iterates through each String child node of this element, replacing it with\nthe result of the block.  …\n"],["run_blahtex","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-run_blahtex","(tex, args)","<p>Run blahtex, return output\n"],["s5_theme","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-s5_theme","()",""],["safe_execute_code","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-safe_execute_code","(object, code)",""],["sanitize_ref_id","MaRuKu::Strings","MaRuKu/Strings.html#method-i-sanitize_ref_id","(s)","<p>Normalize a link reference.\n<p>@param s [String] @return [String]\n"],["script_style?","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-script_style-3F","()","<p>Are we within a script or style tag?\n"],["script_style_cdata_end","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-script_style_cdata_end","(tag)",""],["script_style_cdata_start","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-script_style_cdata_start","(tag)",""],["search_abbreviations","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-search_abbreviations","()",""],["section_number","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-section_number","()","<p>nil if not applicable, else string\n"],["shift_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceManual","MaRuKu/In/Markdown/SpanLevelParser/CharSourceManual.html#method-i-shift_char","()",""],["shift_char","MaRuKu::In::Markdown::SpanLevelParser::CharSourceStrscan","MaRuKu/In/Markdown/SpanLevelParser/CharSourceStrscan.html#method-i-shift_char","()","<p>Return a character as a String, advancing the pointer.\n"],["shift_line","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-shift_line","()",""],["spaces_before_first_char","MaRuKu::Strings","MaRuKu/Strings.html#method-i-spaces_before_first_char","(s)","<p>This returns the position of the first non-list character in a list item.\n<p>@example spaces_before_first_char …\n"],["span_descendents","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-i-span_descendents","(e)","<p>Get all span-level descendents of the given element, recursively, as a flat\nNodeSet.\n<p>@param e [Nokogiri::XML::Node] …\n"],["span_descendents","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-i-span_descendents","(e)","<p>Get all span-level descendents of the given element, recursively, as an\nArray.\n<p>@param e [REXML::Element] …\n"],["split_cells","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-split_cells","(s, allowBlank = false)",""],["split_lines","MaRuKu::Strings","MaRuKu/Strings.html#method-i-split_lines","(s)","<p>Split a string into multiple lines, on line feeds and/or carriage returns.\n<p>@param s [String] @return [String] …\n"],["start_script_style","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-start_script_style","()","<p>Save our @already buffer elsewhere, and switch to using @already for the\ncontents of this script or style …\n"],["string_to_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-string_to_latex","(s)","<p>escapes special characters\n"],["strip_indent","MaRuKu::Strings","MaRuKu/Strings.html#method-i-strip_indent","(s, n)","<p>Removes indentation from the beginning of `s`, up to at most `n` spaces.\nTabs are counted as {TAB_SIZE} …\n"],["stuff_you_read","MaRuKu::In::Markdown::SpanLevelParser::HTMLHelper","MaRuKu/In/Markdown/SpanLevelParser/HTMLHelper.html#method-i-stuff_you_read","()",""],["substitute_markdown_inside_raw_html","MaRuKu::In::Markdown::BlockLevelParser","MaRuKu/In/Markdown/BlockLevelParser.html#method-i-substitute_markdown_inside_raw_html","()","<p>(PHP Markdown extra) Search for elements that have markdown=1 or\nmarkdown=block defined\n"],["t2_block_paragraph","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-t2_block_paragraph","(src, output, signature, lines)",""],["t2_contains_signature?","String","String.html#method-i-t2_contains_signature-3F","()",""],["t2_empty?","String","String.html#method-i-t2_empty-3F","()",""],["t2_get_signature","String","String.html#method-i-t2_get_signature","()","<p>sig, rest = t2_get_signature\n"],["t2_parse","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-t2_parse","(source, params)",""],["t2_parse_blocks","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-t2_parse_blocks","(src, output)","<p>Input is a LineSource\n"],["t2_parse_span","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-t2_parse_span","(src, output)",""],["tell_me_the_future","MaRuKu::In::Markdown::BlockLevelParser::LineSource","MaRuKu/In/Markdown/BlockLevelParser/LineSource.html#method-i-tell_me_the_future","()","<p>Returns the type of next line as a string breaks at first :definition\n"],["tell_user","MaRuKu::Errors","MaRuKu/Errors.html#method-i-tell_user","(s)",""],["textile2","Maruku","Maruku.html#method-c-textile2","(source, params)",""],["textile2","Maruku","Maruku.html#method-c-textile2","(source, params)",""],["to_html","MaRuKu::NokogiriHTMLFragment","MaRuKu/NokogiriHTMLFragment.html#method-i-to_html","()","<p>Convert this fragment to an HTML or XHTML string. @return [String]\n"],["to_html","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html","(context={})","<p>Render as an HTML fragment (no head, just the content of BODY). (returns a\nstring)\n"],["to_html","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-to_html","()",""],["to_html","MaRuKu::REXMLHTMLFragment","MaRuKu/REXMLHTMLFragment.html#method-i-to_html","()",""],["to_html","MaRuKu::Section","MaRuKu/Section.html#method-i-to_html","()","<p>Returns an HTML representation of the table of contents.\n<p>This should only be called on the root section. …\n"],["to_html_abbr","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_abbr","()",""],["to_html_cell","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_cell","()",""],["to_html_code","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_code","()",""],["to_html_code_using_pre","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_code_using_pre","(source, code_lang=nil)","<p>begin maruku_doc\n\n<pre>Attribute: code_background_color\nScope: global, document, element\nSummary: Background ...</pre>\n"],["to_html_definition","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_definition","()",""],["to_html_definition_data","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_definition_data","()",""],["to_html_definition_list","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_definition_list","()","<p>Definition lists ###\n"],["to_html_definition_term","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_definition_term","()",""],["to_html_div","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_div","()",""],["to_html_divref","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_divref","()",""],["to_html_document","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_document","(context={})","<p>Render to a complete HTML document (returns a string)\n"],["to_html_document_tree","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_document_tree","()","<p>Render to a complete HTML document (returns an HTMLElement document tree)\n"],["to_html_email_address","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_email_address","()",""],["to_html_emphasis","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_emphasis","()",""],["to_html_entity","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_entity","()",""],["to_html_eqref","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_eqref","()",""],["to_html_equation","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_equation","()",""],["to_html_footnote_reference","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_footnote_reference","()",""],["to_html_head_cell","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_head_cell","()",""],["to_html_header","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_header","()",""],["to_html_hrule","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_hrule","()",""],["to_html_im_image","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_im_image","()",""],["to_html_im_link","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_im_link","()",""],["to_html_image","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_image","()","<p>Images\n"],["to_html_immediate_link","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_immediate_link","()",""],["to_html_inline_code","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_inline_code","()",""],["to_html_inline_math","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_inline_math","()",""],["to_html_li","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_li","()",""],["to_html_linebreak","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_linebreak","()",""],["to_html_link","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_link","()",""],["to_html_ol","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_ol","()",""],["to_html_paragraph","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_paragraph","()",""],["to_html_quote","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_quote","()",""],["to_html_raw_html","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_raw_html","()","<p>begin maruku_doc\n\n<pre>Attribute: filter_html\nScope: document\n\nIf true, raw HTML is discarded from the output.</pre>\n"],["to_html_ref_definition","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_ref_definition","()",""],["to_html_strong","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_strong","()",""],["to_html_table","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_table","()",""],["to_html_ul","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_ul","()",""],["to_html_xml_instr","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_html_xml_instr","()",""],["to_latex","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex","()","<p>Render as a LaTeX fragment\n"],["to_latex","MaRuKu::Section","MaRuKu/Section.html#method-i-to_latex","()","<p>Returns a LaTeX representation of the table of contents.\n<p>This should only be called on the root section. …\n"],["to_latex_abbr","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_abbr","()",""],["to_latex_cell","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_cell","()",""],["to_latex_code","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_code","()","<p>begin maruku_doc\n\n<pre>Attribute: latex_use_listings\nScope: document\nOutput: latex\nSummary: Support for `listings` ...</pre>\n"],["to_latex_definition","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_definition","()",""],["to_latex_definition_list","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_definition_list","()","<p>Definition lists ###\n"],["to_latex_div","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_div","()",""],["to_latex_divref","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_divref","()",""],["to_latex_document","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_document","()","<p>Render as a complete LaTeX document\n"],["to_latex_email_address","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_email_address","()",""],["to_latex_emphasis","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_emphasis","()",""],["to_latex_entity","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_entity","()",""],["to_latex_eqref","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_eqref","()",""],["to_latex_equation","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_equation","()",""],["to_latex_footnote_reference","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_footnote_reference","()",""],["to_latex_head_cell","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_head_cell","()",""],["to_latex_header","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_header","()",""],["to_latex_hrule","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_hrule","()",""],["to_latex_im_link","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_im_link","()",""],["to_latex_image","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_image","()",""],["to_latex_immediate_link","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_immediate_link","()",""],["to_latex_inline_code","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_inline_code","()",""],["to_latex_inline_math","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_inline_math","()",""],["to_latex_li","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_li","()",""],["to_latex_linebreak","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_linebreak","()",""],["to_latex_link","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_link","()",""],["to_latex_ol","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_ol","()",""],["to_latex_paragraph","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_paragraph","()",""],["to_latex_quote","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_quote","()",""],["to_latex_raw_html","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_raw_html","()",""],["to_latex_ref_definition","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-to_latex_ref_definition","()",""],["to_latex_strong","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_strong","()",""],["to_latex_table","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_table","()",""],["to_latex_ul","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-to_latex_ul","()",""],["to_md","MaRuKu::AttributeList","MaRuKu/AttributeList.html#method-i-to_md","()",""],["to_md","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-to_md","(context={})",""],["to_md","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md","(context={})",""],["to_md_abbr_def","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_abbr_def","(context)",""],["to_md_code","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_code","(context)",""],["to_md_email_address","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_email_address","(context)",""],["to_md_emphasis","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_emphasis","(context)",""],["to_md_entity","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_entity","(context)",""],["to_md_header","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_header","(context)",""],["to_md_hrule","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_hrule","(context)",""],["to_md_im_image","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_im_image","(context)",""],["to_md_im_link","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_im_link","(context)",""],["to_md_image","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_image","(context)",""],["to_md_immediate_link","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_immediate_link","(context)",""],["to_md_inline_code","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_inline_code","(context)",""],["to_md_linebreak","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_linebreak","(context)",""],["to_md_link","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_link","(context)",""],["to_md_ol","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_ol","(context)",""],["to_md_paragraph","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_paragraph","(context)",""],["to_md_quote","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_quote","(context)",""],["to_md_ref_definition","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_ref_definition","(context)",""],["to_md_strong","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_strong","(context)",""],["to_md_ul","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-to_md_ul","(context)",""],["to_s","MaRuKu::AttributeList","MaRuKu/AttributeList.html#method-i-to_s","()",""],["to_s","MaRuKu::MDElement","MaRuKu/MDElement.html#method-i-to_s","()","<p>Strips all formatting from the string\n"],["to_s","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-to_s","()",""],["to_s","Maruku","Maruku.html#method-i-to_s","()",""],["to_s","Maruku","Maruku.html#method-i-to_s",null,""],["to_s5","MaRuKu::MDDocument","MaRuKu/MDDocument.html#method-i-to_s5","(context={})","<p>Render as an HTML fragment (no head, just the content of BODY). (returns a\nstring)\n"],["to_str","MaRuKu::Out::HTML::HTMLElement","MaRuKu/Out/HTML/HTMLElement.html#method-i-to_str","()",""],["unquote","MaRuKu::Strings","MaRuKu/Strings.html#method-i-unquote","(s)","<p>Remove line-initial `&gt;` characters for a quotation.\n<p>@param s [String] @return [String]\n"],["wrap","MaRuKu::Out::Markdown","MaRuKu/Out/Markdown.html#method-i-wrap","(array, line_length, context)",""],["wrap_as_element","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-wrap_as_element","(name, attributes={})","<p>renders children as html and wraps into an element of given name\n<p>Sets &#39;id&#39; if meta is set\n"],["wrap_as_environment","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-wrap_as_environment","(name)",""],["wrap_as_span","MaRuKu::Out::Latex","MaRuKu/Out/Latex.html#method-i-wrap_as_span","(c)",""],["xelem","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-xelem","(type)","<p>Helper to create an element\n"],["xml_newline","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-xml_newline","()",""],["xtext","MaRuKu::Out::HTML","MaRuKu/Out/HTML.html#method-i-xtext","(text)","<p>Helper to create a text node\n"]]}}